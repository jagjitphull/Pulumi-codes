//Pulumi awsx vpc

import * as pulumi from "@pulumi/pulumi";
import * as aws from "@pulumi/aws";
import * as awsx from "@pulumi/awsx";


// Allocate a new VPC with the default settings.
const vpc = new awsx.ec2.Vpc("jpvpc",{
	cidrBlock: "10.0.0.0/16",
	numberOfAvailabilityZones: 2,
	subnetSpecs: [
        {
            type: awsx.ec2.SubnetType.Public,
            cidrMask: 22,
        },
        {
            type: awsx.ec2.SubnetType.Private,
            cidrMask: 20,
        },
    ],
    natGateways: {
        strategy: awsx.ec2.NatGatewayStrategy.Single,
    },
});

const securityGroup = new aws.ec2.SecurityGroup("group", {
    vpcId: vpc.vpcId,
    ingress: [
        {
            fromPort: 22,
            toPort: 22,
            protocol: "tcp",
            cidrBlocks: ["0.0.0.0/0"],
        },
        {
            fromPort: 443,
            toPort: 443,
            protocol: "tcp",
            cidrBlocks: ["0.0.0.0/0"],
        },
    ],
    egress: [
        {
            fromPort: 0,
            toPort: 0,
            protocol: "-1",
            cidrBlocks: ["0.0.0.0/0"],
        },
    ],
});


// Generate a new SSH key pair
const keyPair = new aws.ec2.KeyPair("my-keypair", {
    keyName: "my-keypair",
    publicKey: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDUWcfmYSRsrSYyLYATCPK2SFggXOHN7MLmbdz044pTOqvRPwRIcNZkMbArgI/5g6Lfkul58aJUCPF7q7MR3mWy8RJlTCfPEKjX8MXgBnbkMvoTj7SW56YWwKkpKr+JbeN6JEiSYOQovoGLMzoZGP504VX7pIdkz1Pi3027FCyCRnWdL7mjkdqwrYQHktQdBQ9DJDTeH5yeK+j1B/Vxi0jcNvIfhij3hDK9sL3E5zWfaneMf7JmoikJX5SJj3VzOdmclP67AqWWJgerpZH6okNDpgxh9V7m8qofHosOgBCK9cc1yJm+sNTXGpBAvJhX7+gHCKbpj0ZKdmsvGeD/PGq052AetH+1GK0fNHuH3UXAzCYsSFmcD0oQnjERXz6elW2DOF76LtYp3c8PhTA4PWulUs94LRN1YRnmoRldFfkcylxKWR6JExOFV72Zo1pOnsoqaJyy8Cv5RFUXYYXRZQNbT8MZPQF5F437kRZT+OTVXXbC8OJzkjh1aW3ykj8e+umBrDJLwQbpeDIe8yfeOiXCMe9UGmdqA3/Qne5hlewIGQU9lBDwS+zPgCvIMWJHGvyDI271WJeZzhp/CucljvtepqDWPJiX9Sv1QyN93RV40rgSvVrDtgDyOPu5GHVmNn5BdHgv1uiunWBm0zEuMDhFdxOlaclTsvKsUHCS2O03Kw== info@gnugroup.org",  // Replace with your actual SSH public key
});


const ami = aws.ec2.getAmiOutput({
    filters: [{ name: "name", values: ["amzn2-ami-hvm-*"] }],
    owners: ["amazon"],
    mostRecent: true,
});

const instance = new aws.ec2.Instance("instance", {
    ami: ami.id,
    instanceType: "t2.micro",
    vpcSecurityGroupIds: [securityGroup.id],
    keyName: keyPair.keyName,
    subnetId: vpc.publicSubnetIds.apply(ids => ids[0]),
});

// Export a few properties to make them easy to use.
export const vpcId = vpc.vpcId;
export const privateSubnetIds = vpc.privateSubnetIds;
export const publicSubnetIds = vpc.publicSubnetIds;