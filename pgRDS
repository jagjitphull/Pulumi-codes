//pgRDS

import * as pulumi from "@pulumi/pulumi";
import * as aws from "@pulumi/aws";

// Define the VPC and subnet group
const vpc = new aws.ec2.Vpc("pgvpc", {
    cidrBlock: "10.0.0.0/16",
});

const subnet = new aws.ec2.Subnet("pgsubnet", {
    vpcId: vpc.id,
    cidrBlock: "10.0.1.0/24",
    availabilityZone: "ap-south-1a",
});

const subnetGroup = new aws.rds.SubnetGroup("pgsubnetgroup", {
    subnetIds: [subnet.id],
});

// Define the security group
const securityGroup = new aws.ec2.SecurityGroup("pgsecuritygroup", {
    vpcId: vpc.id,
    ingress: [
        {
            protocol: "tcp",
            fromPort: 5432,
            toPort: 5432,
            cidrBlocks: ["0.0.0.0/0"],
        },
    ],
    egress: [
        {
            protocol: "-1",
            fromPort: 0,
            toPort: 0,
            cidrBlocks: ["0.0.0.0/0"],
        },
    ],
});

// Create the PostgreSQL RDS instance
const db = new aws.rds.Instance("pgpostgresinstance", {
    engine: "postgres",
    instanceClass: "db.t3.micro",
    allocatedStorage: 20,
    dbSubnetGroupName: subnetGroup.name,
    vpcSecurityGroupIds: [securityGroup.id],
    dbName: "mydatabase",
    username: "myusername",
    password: "mypassword", // Replace with a secure password
    skipFinalSnapshot: true,
});

// Export the database endpoint
export const dbEndpoint = db.endpoint;
export const dbPort = db.port;